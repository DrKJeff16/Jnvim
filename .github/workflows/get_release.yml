name: Action Release

# Controls when the workflow will run
on:
  push:
    tags:
      - "v*.*.*"
      - "v*.*.*-*"
  merge_group:
    branches:
      - main
  # Triggers the workflow on push or pull request events but only for the "main" branch
  release:
    types: [created]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  build:
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v5
      - name: Build project assets
        id: checkout
        run: |
          zip -r -9 Jnvim.zip init.lua lua README.md
          tar cvJf Jnvim.tar.xz init.lua lua README.md
          sha512sum Jnvim.zip | cut -d ' ' -f1 > Jnvim.zip.sha512sum
          sha512sum Jnvim.tar.xz | cut -d ' ' -f1 > Jnvim.tar.xz.sha512sum

      - name: Get Release
        id: get_current_release
        uses: joutvhu/get-release@v1.0.3
        with:
          # Should get latest release?
          latest: true
          # Find the latest release including the pre-releases
          prerelease: true
          # A pattern string to filter the releases by tag_name
          pattern: '^v.*'
          # Show ouputs
          debug: true
          # Fail when no release was found
          throwing: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Build Release File
        run: echo ${{ github.sha }} > Release.txt
      - name: Test Release
        run: cat Release.txt

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: |
            Release.txt
            Jnvim.tar.xz
            Jnvim.tar.xz.sha512sum
            Jnvim.zip
            Jnvim.zip.sha512sum
            LICENSE
          token: ${{ secrets.GITHUB_TOKEN }}

      # - name: Upload Release ZIP Asset
      #   uses: actions/upload-release-asset@v1
      #   id: upload_zip
      #   with:
      #     upload_url: ${{ steps.get_current_release.outputs.upload_url }}
      #     asset_path: ./Jnvim.zip
      #     asset_name: Jnvim.zip
      #     asset_content_type: application/zip
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Upload Release Tarball
      #   uses: actions/upload-release-asset@v1
      #   id: upload_txz
      #   with:
      #     upload_url: ${{ steps.get_current_release.outputs.upload_url }}
      #     asset_path: ./Jnvim.tar.xz
      #     asset_name: Jnvim.tar.xz
      #     asset_content_type: application/x-xz-compressed-tar
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Upload Release ZIP Asset sha512sum
      #   uses: actions/upload-release-asset@v1
      #   id: upload_zip_sha512sum
      #   with:
      #     upload_url: ${{ steps.get_current_release.outputs.upload_url }}
      #     asset_path: ./Jnvim.zip.sha512sum
      #     asset_name: Jnvim_zip.sha512sum
      #     asset_content_type: text/plain
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #
      # - name: Upload Release Tarball sha512sum
      #   uses: actions/upload-release-asset@v1
      #   id: upload_tar_xz_sha512sum
      #   with:
      #     upload_url: ${{ steps.get_current_release.outputs.upload_url }}
      #     asset_path: ./Jnvim.tar.xz.sha512sum
      #     asset_name: Jnvim_txz.sha512sum
      #     asset_content_type: text/plain
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
